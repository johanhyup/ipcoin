"use strict";(self.webpackChunktradingview=self.webpackChunktradingview||[]).push([[49945,8592],{184277:(e,t,s)=>{function n(e){return 0===e.detail}s.d(t,{isKeyboardClick:()=>n})},963239:(e,t,s)=>{s.r(t),s.d(t,{copyToClipboard:()=>i,writeImpl:()=>a,writePromiseUsingApi:()=>r});var n=s(793993);function i(e){return a(e,null)}function a(e,t){const s=e.files&&e.files.length>0;if(!s&&t&&t.eventPhase>0)return o(t,e),Promise.resolve();if(!s){let t=!1;const s=s=>{s.stopImmediatePropagation(),o(s,e),t=!0};try{document.addEventListener("copy",s,!0),document.execCommand("copy")}finally{document.removeEventListener("copy",s,!0)}if(t)return Promise.resolve()}return async function(e){const t=(0,n.getClipboard)();if(!t||!t.write||!window.ClipboardItem)throw new DOMException("ClipboardApi is not supported","NotSupportedError");const s={};for(const t of e.files||[])s[t.type]=t;e.text&&(s["text/plain"]=e.text);e.html&&(s["text/html"]=e.html);return t.write([new window.ClipboardItem(s)])}(e)}function o(e,t){e.preventDefault();const s=e.clipboardData;t.text&&s.setData("text/plain",t.text),t.html&&s.setData("text/html",t.html)}async function r(e,t){const s=(0,n.getClipboard)();if("text/plain"===t&&!s.write){const t=await e;return s.writeText(await t.text())}if(!s||!s.write||!window.ClipboardItem)throw new DOMException("ClipboardApi is not supported","NotSupportedError");let i=null;try{i=new window.ClipboardItem({[t]:e})}catch(s){i=new window.ClipboardItem({[t]:await e})}if(i)return s.write([i]);throw new Error("ClipboardApi is not supported")}},793993:(e,t,s)=>{function n(){return navigator.androidClipboard??navigator.clipboard}s.d(t,{getClipboard:()=>n})},470316:(e,t,s)=>{s.d(t,{Modifiers:()=>n.Modifiers,hashFromEvent:()=>n.hashFromEvent,humanReadableHash:()=>n.humanReadableHash,humanReadableModifiers:()=>n.humanReadableModifiers,isMacKeyboard:()=>n.isMacKeyboard,modifiersFromEvent:()=>n.modifiersFromEvent});var n=s(591800)},129586:(e,t,s)=>{function n(e){return"object"==typeof e&&"metaInfo"in e}function i(e){return null==e}var a;s.d(t,{TelemetryGroup:()=>a,hasMetaInfo:()=>n,isAbsentParam:()=>i}),function(e){e.Fast="fast",e.Medium="medium",e.Slow="slow"}(a||(a={}))},791488:(e,t,s)=>{s.d(t,{RE_MESSAGE_LINE_WITH_DIGITS:()=>c,TV_SCRIPT_DELETED:()=>o,TV_SCRIPT_LEGACY_PINE_PROCESSED:()=>h,TV_SCRIPT_MODIFICATION_ACTIVE:()=>i,TV_SCRIPT_MODIFIED:()=>a,TV_SCRIPT_RENAMED:()=>r,pineTelemetryGroups:()=>l});var n=s(129586)
;const i="TVScriptModificationActive",a="TVScriptModified",o="TVScriptDeleted",r="TVScriptRenamed",h="TVScriptLegacyPineProcessed",c=/[l|L]ines? (\d*)/,l=new Map([["delete",n.TelemetryGroup.Fast],["get",n.TelemetryGroup.Fast],["is_auth_to_get",n.TelemetryGroup.Fast],["is_auth_to_write",n.TelemetryGroup.Fast],["parse_title",n.TelemetryGroup.Fast],["rename",n.TelemetryGroup.Fast],["lib_list",n.TelemetryGroup.Fast],["list",n.TelemetryGroup.Medium],["eval_pine_ex",n.TelemetryGroup.Medium],["translate_light",n.TelemetryGroup.Medium],["process_legacy",n.TelemetryGroup.Slow],["publish",n.TelemetryGroup.Slow],["save",n.TelemetryGroup.Slow],["translate",n.TelemetryGroup.Slow],["translate_source",n.TelemetryGroup.Slow],["gen_alert",n.TelemetryGroup.Slow]])},427233:(e,t,s)=>{s.d(t,{RequestCache:()=>i,SingleRequestCache:()=>a});var n=s(79342);class i{constructor(){this._cache=new Map,window.loginStateChange&&window.loginStateChange.subscribe(this,this.clear)}get(e){return this._cache.get(e)}set(e,t){this._cache.set(e,t)}delete(e){return this._cache.delete(e)}clear(){this._cache.clear()}}class a extends i{constructor(){super(),this._key=(0,n.guid)()}reset(e){super.set(this._key,e)}get(){return super.get(this._key)}clear(){super.clear()}}},8592:(e,t,s)=>{s.r(t),s.d(t,{pushStreamMultiplexer:()=>H});var n=s(226722),i=s(345848),a=s(49437),o=s(454576),r=s(175203),h=s(338619),c=s(650151),l=s(5553),u=s(78770);const _=(0,h.getLogger)("PersistentWebsocketTransport");class d extends u.PersistentTransport{constructor(e,t){super(e,_,t)}sendMessage(e){this._connectionStatus.value()===o.ConnectionStatus.Open?this._socket?this._socket.send(e):_.logError("Something went wrong - code 0x3"):_.logWarn("Attempt to send message but connection is not opened")}_createNativeTransport(e){const t=new WebSocket(e);return t.binaryType="arraybuffer",t.addEventListener("error",this._socketErrorHandler),t.addEventListener("close",this._socketCloseHandler),t.addEventListener("open",this._socketOpenHandler),t.addEventListener("message",this._socketMessageHandler),t}_disconnectTransport(){if(null===this._socket)return;this._socket.removeEventListener("error",this._socketErrorHandler),this._socket.removeEventListener("close",this._socketCloseHandler),this._socket.removeEventListener("open",this._socketOpenHandler),this._socket.removeEventListener("message",this._socketMessageHandler),this._removeOnOfflineListener();const e=this._socket;this._socket=null,this._connectionStatus.setValue(o.ConnectionStatus.Closed),e.readyState!==WebSocket.CLOSED&&e.close()}}class m{constructor(e){this._queue=[],this._isWorking=!1,this._onResolve=()=>{this._queue.length>0&&this._createPromise(this._queue[0])},this._logger=e}enqueue(e){this._logger.logNormal(`Adding channel in stack. Queue size: ${this._queue.length}`),this._isWorking||this._createPromise(e),this._queue.push(e)}_createPromise(e){this._isWorking=!0,this._wrap(e).then(this._onResolve)}_wrap(e){return new Promise((t=>{e().catch((e=>this._logger.logNormal(`Error when trying handling channel: ${e.message}`))).finally((()=>{
this._isWorking=!1,this._queue.shift(),t()}))}))}}const g="PushStream",p=(0,h.getLogger)(g);var S;!function(e){e[e.EventSource=0]="EventSource",e[e.WebSocket=1]="WebSocket"}(S||(S={}));class v{constructor(e,t){this._channels=[],this._queue=new m(p),this._transport=t.transportType===S.EventSource?new l.PersistentEventSourceTransport(this._onPushStreamMessage.bind(this)):new d(this._onPushStreamMessage.bind(this),this._onPushStreamClose.bind(this)),this._settings=t,this._messageHandler=e}addChannel(e){this._queue.enqueue((()=>this._addChannel(e)))}removeChannel(e){this._queue.enqueue((()=>this._removeChannel(e)))}getChannels(){return this._channels}hasChannel(e){return-1!==this._channels.indexOf(e)}connectionStatus(){return this._transport.connectionStatus()}reconnectEvent(){return this._transport.successReconnectReachedEvent()}connect(){(0,c.assert)(0!==this._channels.length,"There is no channels"),this._transport.connect()}disconnect(){this._transport.disconnect()}getLogs(e){return(0,h.getRawLogHistory)(e,g)}async _addChannel(e){(0,c.assert)(!this.hasChannel(e),`Channel with name ${e} has already been subscribed`),p.logNormal(`Adding channel ${e}`),this._channels.push(e);const{maxSize:t}=this._settings;return void 0!==t&&this._channels.length>t&&(this._channels=this._channels.slice(this._channels.length-t)),this._transport.setUrl(this._generateUrl())}async _removeChannel(e){const t=this._channels.indexOf(e);return(0,c.assert)(-1!==t,`There is no channel with name ${e}`),p.logNormal(`Removing channel ${e}`),this._channels.splice(t,1),this._transport.setUrl(this._generateUrl())}_onPushStreamMessage(e){if("string"!=typeof e)throw new Error("Wrong message type, expected string");const t=JSON.parse(e),s=t.id,n=t.channel;-2===s?p.logWarn("Received unexpected message: about removed the channel"):s>0&&(p.logDebug(`Received message: id="${s}" channel="${n}"`),this._messageHandler(t.text,s,n))}_onPushStreamClose(e){1005===e.code&&r.telemetry.sendChartReport("websocket_code_1005")}_generateUrl(){const e=this._channels.join("/");return p.logNormal(`Generate pushstream url - ${e}`),`${this._settings.url}/${this._settings.urlPath}/${e}`}}s(659863);class C{constructor(){this._handlers={},this._specialHandlers={}}on(e,t){const s=this._isSpecialChannel(e)?this._specialHandlers:this._handlers;s[e]||(s[e]=[]),s[e].push(t)}off(e,t){const s=this._isSpecialChannel(e)?this._specialHandlers:this._handlers;if(!(e in s))return;if(void 0===t)return void delete s[e];const n=s[e].indexOf(t);n>=0&&s[e].splice(n,1)}emit(e,t,s,n){this._handlers[s]&&this._handlers[s].forEach((i=>{i(e,t,s,n)}));for(const i of Object.keys(this._specialHandlers)){const a="^"+i.replace(/\*/g,".*?")+"$";new RegExp(a).test(s)&&this._specialHandlers[i].forEach((i=>{i(e,t,s,n)}))}}_isSpecialChannel(e){return/\*/.test(e)}}var w=s(125226),b=s(79342),f=s(314802),P=s(942634),E=s(955273),T=s(167175);function y(){return!T.isIOS&&!T.isIPad&&void 0!==navigator.locks}class k{constructor(){this._id=(0,b.guid)(),this._state={[this._id]:{}},this._xEventPrefix="multiplexer-state-",
this._xEventCreateTab=this._xEventPrefix+"create-new-tab",this._xEventShareState=this._xEventPrefix+"share-state",this._lockName="tab_destruction",this._stateChangeDelegate=new P.Delegate,this._createdLocks={},this._lockEnabled=y(),this._lockPromise=(0,E.createDeferredPromise)(),this._onTabCreateCb=null,this._onTabCreate=e=>{this._onTabCreateCb&&this._onTabCreateCb();const t=JSON.parse(e);this._state[t]={},this._shareState(),this._requestTabRemoveLock(t)},this._shareState=()=>{const e=JSON.stringify([this._id,this._state[this._id]]);n.TVXWindowEvents.emit(this._xEventShareState,e)},this._requestTabRemoveLock=e=>{!this._createdLocks[e]&&this._lockEnabled&&(this._createdLocks[e]=1,navigator.locks.request(`${this._lockName}_${e}`,(async()=>{const t=this._state[e]||{};this._compareTabState(e,{},t,"add"),this._compareTabState(e,t,{},"remove"),delete this._state[e],delete this._createdLocks[e]})))},this._onShareStateFromOther=e=>{const[t,s]=JSON.parse(e),n=this._state[t]||{};this._compareTabState(t,s,n,"add"),this._compareTabState(t,n,s,"remove"),this._state[t]=s,this._requestTabRemoveLock(t)},this._removeChannel=(e,t)=>{delete this._state[this._id][e][t],this._isListenByAnotherTab(e,t)||this._stateChangeDelegate.fire("remove",e,t);0===Object.keys(this._state[this._id][e]).length&&delete this._state[this._id][e]},n.TVXWindowEvents.on(this._xEventCreateTab,this._onTabCreate),n.TVXWindowEvents.on(this._xEventShareState,this._onShareStateFromOther),this._lockEnabled&&navigator.locks.request(`${this._lockName}_${this._id}`,(async()=>(n.TVXWindowEvents.emit(this._xEventCreateTab,JSON.stringify(this._id)),window.addEventListener("beforeunload",(()=>this._lockPromise.resolve())),this._lockPromise.promise)))}addChannel(e,t){this._isNotEmpty(e,t)?this._state[this._id][e][t]++:(this._state[this._id][e]||(this._state[this._id][e]={}),this._state[this._id][e][t]=1),this._isListenByAnotherTab(e,t)||this._stateChangeDelegate.fire("add",e,t),this._shareState()}removeChannel(e,t){this._isExist(e,t)&&(this._state[this._id][e][t]--,this._isNotEmpty(e,t)||this._removeChannel(e,t),this._shareState())}collectPushStreamChannels(e){const t=new Set;return Object.keys(this._state).forEach((s=>{const n=this._state[s][e];this._state[s][e]&&Object.keys(n).forEach((e=>t.add(e)))})),Array.from(t)}onStateChange(e){this._stateChangeDelegate.subscribe(null,e)}offStateChange(e){this._stateChangeDelegate.unsubscribe(null,e)}onTabCreate(e){this._onTabCreateCb=e}_isExist(e,t,s=this._id){return void 0!==this._state[s]&&void 0!==this._state[s][e]&&void 0!==this._state[s][e][t]}_isNotEmpty(e,t,s=this._id){return this._isExist(e,t,s)&&this._state[s][e][t]>0}_compareTabState(e,t,s,n){Object.keys(t).forEach((i=>{Object.keys(t[i]).forEach((t=>{this._isListenByAnotherTab(i,t,e)||s[i]&&s[i][t]||this._stateChangeDelegate.fire(n,i,t)}))}))}_isListenByAnotherTab(e,t,s=this._id){return Object.keys(this._state).some((n=>n!==s&&this._isNotEmpty(e,t,n)))}}const x=(0,h.getLogger)(g),R={url:window.PUSHSTREAM_URL,urlPath:"message-pipe-ws",transportType:S.WebSocket},L={
url:window.PUSHSTREAM_URL.replace("wss://","https://"),urlPath:"message-pipe-es",transportType:S.EventSource};class O{constructor(){var e;this.guid=(0,b.guid)(),this._pushStreamPublic=null,this._pushStreamPrivate=null,this._statusHandlers=[],this._reconnectHandlers=[],this._userPrivateChannel=null,this._channelMultiplexer=new C,this._xEventPrefix="multiplexer-bc-",this._storagePrefix="pushStreamMultiplexerState.",this._userChannelPrefix="private_",this._statusPublic=o.ConnectionStatus.Closed,this._statusPrivate=o.ConnectionStatus.Closed,this._xEventSend=this._xEventPrefix+"send",this._xEventConnectionStatus=this._xEventPrefix+"connectionStatus",this._xEventReconnectCommand=this._xEventPrefix+"reconnectCommand",this._xEventReconnectSuccess=this._xEventPrefix+"reconnectSuccess",this._xEventRequestLogs=this._xEventPrefix+"requestLogs",this._xEventShareLogs=this._xEventPrefix+"shareLogs",this._state=new k,this._shareLogsKey=this._storagePrefix+"shareLogs",this._lockName="pushstream",this._lockPromise=(0,E.createDeferredPromise)(),this._dispatchReconnectSuccessCommandFromOther=e=>{if(this.ownPushStream())return;const[t]=this._decodeParams(e);this._callReconnectHandlers(t)},this._dispatchMessage=(e,t,s)=>{this._dispatchMessageToOthers(e,t,s),this._dispatchMessageToSelf(e,t,s,!1)},this._dispatchMessageFromOther=e=>{if(this.ownPushStream())return;const[t,s,n]=this._decodeParams(e);this._dispatchMessageToSelf(t,s,n,!0)},this._dispatchStatusChangeFromOther=e=>{const t=this._decodeConnectionStatus(e),s=t[0],n=t[1];this.ownPushStream()||this._dispatchStatusChangeToSelf(s,n)},this._dispatchReconnectCommandFromOther=()=>{this.ownPushStream()&&this.forceConnect()},this._onRequestLogs=()=>{if(this.ownPushStream()){const e=this._getOwnLogs();let t="";try{t=JSON.stringify(e)}catch(e){x.logError("Failed to stringify own pushstream logs")}a.TVLocalStorage.setItem(this._shareLogsKey,t),n.TVXWindowEvents.emit(this._xEventShareLogs,t)}},this._onStateChange=(e,t,s)=>{const n="private"===t?this._pushStreamPrivate:this._pushStreamPublic;"add"===e?n?.addChannel(s):n?.removeChannel(s)},this._onNewTabCreate=()=>{this._dispatchStatusChangeToOthers(this._statusPublic,this._statusPrivate)},y()?navigator.locks.request(this._lockName,(async()=>(this._state.onStateChange(this._onStateChange),this._state.onTabCreate(this._onNewTabCreate),this._instantiatePushStream(),window.addEventListener("beforeunload",(()=>this._lockPromise.resolve())),this._lockPromise.promise))):(this._state.onStateChange(this._onStateChange),this._instantiatePushStream()),n.TVXWindowEvents.on(this._xEventSend,this._dispatchMessageFromOther),n.TVXWindowEvents.on(this._xEventConnectionStatus,this._dispatchStatusChangeFromOther),n.TVXWindowEvents.on(this._xEventReconnectCommand,this._dispatchReconnectCommandFromOther),n.TVXWindowEvents.on(this._xEventReconnectSuccess,this._dispatchReconnectSuccessCommandFromOther),n.TVXWindowEvents.on(this._xEventRequestLogs,this._onRequestLogs),e=()=>{window.loginStateChange&&window.loginStateChange.subscribe(this,this._changeLoginState)},
"loading"!==document.readyState?e():document.addEventListener("DOMContentLoaded",e)}on(e,t){this._channelMultiplexer.on(e,t)}off(e,t){this._channelMultiplexer.off(e,t)}onStatus(e){this._statusHandlers.push({handler:e,isPrivate:!1}),setTimeout((()=>e(this._statusPublic)),0)}onPrivateStatus(e){this._statusHandlers.push({handler:e,isPrivate:!0}),setTimeout((()=>e(this._statusPrivate)),0)}onReconnect(e,t=!1){this._reconnectHandlers.push({handler:e,isPrivate:t})}offReconnect(e){this._reconnectHandlers=this._reconnectHandlers.filter((t=>t.handler!==e))}offStatus(e){this._statusHandlers=this._statusHandlers.filter((t=>t.handler!==e))}forceConnect(){x.logNormal(`Creating pushstream connection after force connect. Main tab: ${this.ownPushStream()}`),this.ownPushStream()?(this._pushStreamPublic?.disconnect(),this._pushStreamPrivate?.disconnect(),this._instantiatePushStream()):n.TVXWindowEvents.emit(this._xEventReconnectCommand)}disconnect(){this.ownPushStream()&&this._destructPushStream()}getLogs(e){return new Promise((t=>{const s=setTimeout((()=>{const e=a.TVLocalStorage.getItem(this._shareLogsKey);t(null!==e?JSON.parse(e):[])}),1e3),i=e=>{let a;n.TVXWindowEvents.off(this._xEventShareLogs,i),n.TVXWindowEvents.emit(this._xEventShareLogs,""),clearTimeout(s);try{a=JSON.parse(e)}catch(e){a=[],x.logError("Failed to parse logs received from master tab")}t(a)};this.ownPushStream()?t(this._getOwnLogs(e)):(n.TVXWindowEvents.on(this._xEventShareLogs,i),n.TVXWindowEvents.emit(this._xEventRequestLogs))}))}ownPushStream(){return!!this._pushStreamPublic||!!this._pushStreamPrivate}pushStream(){if(!this.ownPushStream())throw new Error("Not own PushStream");return this._pushStreamPublic}isConnected(){return this._statusPublic>0}status(){return this._statusPublic??o.ConnectionStatus.Closed}statusPrivate(){return this._statusPrivate??o.ConnectionStatus.Closed}userChannel(){if(!this._userPrivateChannel)throw new Error("No user channel");return this._userChannel(this._userPrivateChannel)}addChannel(e){this._state.addChannel(e.startsWith(this._userChannelPrefix)?"private":"public",e)}removeChannel(e){this._state.removeChannel(e.startsWith(this._userChannelPrefix)?"private":"public",e)}static getInstance(){return null===this._instance&&(this._instance=new O),this._instance}_userChannel(e){return this._userChannelPrefix+e}_codeParams(e){const t=[...e];return t.push((new Date).getTime()),JSON.stringify(t)}_decodeParams(e){const t=JSON.parse(e);return t.pop(),t}_instantiatePushStream(){this._pushStreamPublic&&((0,i.trackEvent)("PushstreamDoublePublic",window.user&&window.user.username||"Guest",navigator.userAgent),this._pushStreamPublic.disconnect());const e=this._getPushStreamSettings();this._pushStreamPublic=new v(this._dispatchMessage,e),this._pushStreamPublic.connectionStatus().subscribe((e=>{this._dispatchStatusChange(e,this._statusPrivate)})),this._pushStreamPublic.reconnectEvent().subscribe(null,(()=>{this._dispatchReconnectSuccessCommand()})),this._pushStreamPrivate&&((0,
i.trackEvent)("PushstreamDoublePrivate",window.user&&window.user.username||"Guest",navigator.userAgent),this._pushStreamPrivate.disconnect()),this._pushStreamPrivate=new v(this._dispatchMessage,{...e,maxSize:1}),this._pushStreamPrivate.connectionStatus().subscribe((e=>{this._dispatchStatusChange(this._statusPublic,e)})),this._pushStreamPrivate.reconnectEvent().subscribe(null,(()=>{this._dispatchReconnectSuccessCommand(!0)})),this.on("pushstream_set_user_channel",(e=>{this._setUserChannel(e)})),this._connectChannels()}_destructPushStream(){const e=this._pushStreamPublic;this._pushStreamPublic=null,e?.disconnect();const t=this._pushStreamPrivate;this._pushStreamPrivate=null,t?.disconnect(),this._dispatchStatusChangeFromOther(this._codeParams([o.ConnectionStatus.Closed,o.ConnectionStatus.Closed]))}_connectChannels(){this._pushStreamPublic?.addChannel("public");const e=this._state.collectPushStreamChannels("public");void 0!==e&&e.length>0&&e.map((e=>this._pushStreamPublic?.addChannel(e))),"is_authenticated"in window?this._connectUserChannelInitial(!0):window.loginStateChange&&window.loginStateChange.subscribe(this,this._connectUserChannelInitial),this._isPublicPushstreamEnabled()&&this._pushStreamPublic?.connect()}_getPushStreamSettings(){return(0,f.isOnMobileAppPage)("any")?(0,w.isFeatureEnabled)("enable_eventsource_pushstream_mobile")?L:R:(0,w.isFeatureEnabled)("enable_eventsource_pushstream_transport")?L:R}_isPublicPushstreamEnabled(){return(0,f.isOnMobileAppPage)("any")||!(0,w.isFeatureEnabled)("disable_pushstream_connections_for_anonymous_users")||window.is_authenticated||window.TradingView.onChartPage}_connectUserChannelInitial(e){e&&(window.is_authenticated?(this._userPrivateChannel=window.user.private_channel??null,this._pushStreamPrivate?.addChannel(this.userChannel()),this._pushStreamPrivate?.connect()):this._userPrivateChannel=null)}_changeLoginState(e){e||(this._isPublicPushstreamEnabled()&&this._pushStreamPublic?.connect(),window.is_authenticated?(this._userPrivateChannel=window.user.private_channel??null,this.ownPushStream()&&(this._pushStreamPrivate?.addChannel(this.userChannel()),this._pushStreamPrivate?.connect())):(this.ownPushStream()&&(this._pushStreamPrivate?.removeChannel(this.userChannel()),this._pushStreamPrivate?.disconnect()),this._userPrivateChannel=null))}_setUserChannel(e){x.logNormal("Set user channel "+e),e!==this._userPrivateChannel&&(this.ownPushStream()&&this._userPrivateChannel&&this._pushStreamPrivate?.removeChannel(this.userChannel()),this._userPrivateChannel=e,this.ownPushStream()&&this._userPrivateChannel&&this._pushStreamPrivate?.addChannel(this.userChannel()))}_dispatchStatusChange(e,t){this._dispatchStatusChangeToOthers(e,t),this._dispatchStatusChangeToSelf(e,t)}_dispatchStatusChangeToSelf(e,t){e!==this._statusPublic&&(this._statusPublic=e,this._callStatusHandlers(e,!1)),t!==this._statusPrivate&&(this._statusPrivate=t,this._callStatusHandlers(t,!0))}_callStatusHandlers(e,t){x.logNormal("Connection status change: "+e+", private "+t+", is main tab "+this.ownPushStream()),
r.telemetry.sendReport("site","pushstream_status_change"),this._statusHandlers.forEach((s=>{s.isPrivate===t&&s.handler(e)}))}_callReconnectHandlers(e){x.logNormal("Reconnection has been made"),this._reconnectHandlers.forEach((t=>{t.isPrivate===e&&t.handler()}))}_dispatchReconnectSuccessCommand(e=!1){if(this.ownPushStream()){this._callReconnectHandlers(e);const t=this._codeParams([e]);n.TVXWindowEvents.emit(this._xEventReconnectSuccess,t)}}_decodeConnectionStatus(e){const t=parseInt(e,10);return isNaN(t)?this._decodeParams(e):[t,t]}_dispatchStatusChangeToOthers(e,t){if(this.ownPushStream()){const s=this._codeParams([e,t]);n.TVXWindowEvents.emit(this._xEventConnectionStatus,s)}}_dispatchMessageToSelf(e,t,s,n){const i=e.channel,a=e.content;this._emit(a,t,i,n)}_dispatchMessageToOthers(e,t,s){const i=[e,t,s];n.TVXWindowEvents.emit(this._xEventSend,this._codeParams(i))}_emit(e,t,s,n){this._channelMultiplexer.emit(e,t,s,n)}_getOwnLogs(e){if(this.ownPushStream()){const t=(0,h.getRawLogHistory)(e,g),s=this.pushStream()?.getLogs();return[].concat(t,s??[])}return[]}}O._instance=null;const H=O.getInstance()},79200:(e,t,s)=>{s.d(t,{getPersistentLogger:()=>i,setPersistentLogger:()=>a});let n=null;function i(){return n}function a(e){n=e}},5553:(e,t,s)=>{s.d(t,{PersistentEventSourceTransport:()=>o});var n=s(454576),i=s(78770);const a=(0,s(338619).getLogger)("PersistentWebsocketTransport");class o extends i.PersistentTransport{constructor(e){super(e,a),this._specializedErrorHandlerBound=this._specializedErrorHandler.bind(this)}_createNativeTransport(e){const t=new EventSource(e,{withCredentials:!0});return t.addEventListener("error",this._specializedErrorHandlerBound),t.addEventListener("open",this._socketOpenHandler),t.addEventListener("message",this._socketMessageHandler),t}_disconnectTransport(){if(null===this._socket)return;this._socket.removeEventListener("error",this._specializedErrorHandlerBound),this._socket.removeEventListener("open",this._socketOpenHandler),this._socket.removeEventListener("message",this._socketMessageHandler),this._removeOnOfflineListener();const e=this._socket;this._socket=null,this._connectionStatus.setValue(n.ConnectionStatus.Closed),e.readyState!==WebSocket.CLOSED&&e.close()}_specializedErrorHandler(e){e.eventPhase===EventSource.CLOSED?this._socketCloseHandler(e):this._socketErrorHandler()}}},78770:(e,t,s)=>{s.d(t,{PersistentTransport:()=>h});var n=s(454576),i=s(878),a=s(375397),o=s(942634),r=s(622864);class h{constructor(e,t,s){this._url="",this._socket=null,this._reconnectCount=0,this._onlineCancellationToken=null,this._connectionStatus=new a.WatchedValue(n.ConnectionStatus.Closed),this._socketCloseHandler=this._onCloseCallback.bind(this),this._socketErrorHandler=this._onErrorCallback.bind(this),this._socketOpenHandler=this._onOpenCallback.bind(this),this._socketMessageHandler=this._onMessageCallback.bind(this),this._maxReconnectReachedEventDelegate=new o.Delegate,this._successReconnectReachedEventDelegate=new o.Delegate,this._shouldReconnect=!0,this._maxReconnectCount=null,
this._reconnectTimeoutId=0,this._connectAbortController=null,this._tryReconnect=()=>{if(this._disconnect(),this._shouldReconnect){const e=this._getReconnectTimeout();this._logger.logNormal(`Sleeping some time before reconnect ${e}ms`),this._reconnectTimeoutId=setTimeout(this._tryReconnectImpl.bind(this),e)}else this._logger.logNormal("Skip reconnecting because of shouldReconnect state")},this._onOfflineHandler=()=>{this._removeOnOfflineListener(),this._logger.logInfo("Network status changed to offline - trying to reconnect"),this._tryReconnect()},this._logger=t,this._messageHandler=e,this._closeHandler=s,window.addEventListener("unload",(()=>{t.logNormal("Unload event comes - disconnecting without reconnect after that..."),this._shouldReconnect=!1,this._disconnect()}),!1)}setUrl(e){if(this._url===e)return Promise.resolve();const t=this._connectionStatus.value()!==n.ConnectionStatus.Closed;return t&&this._disconnect(),this._url=e,t?this.connect():Promise.resolve()}url(){return this._url}connect(){return this._connectImpl()}setMaxReconnectCount(e){this._maxReconnectCount=e}connectionStatus(){return this._connectionStatus.readonly()}disconnect(){this._shouldReconnect=!1,this._disconnect()}maxReconnectReachedEvent(){return this._maxReconnectReachedEventDelegate}successReconnectReachedEvent(){return this._successReconnectReachedEventDelegate}async _prepareParamsForConnection(e){}_disconnect(){this._connectAbortController?.abort(),this._connectAbortController=null,clearTimeout(this._reconnectTimeoutId),this._reconnectTimeoutId=0,this._connectionStatus.value()!==n.ConnectionStatus.Closed?this._socket?(this._logger.logNormal(`Closing connection to: ${this._socket.url}, currentStatus: ${n.ConnectionStatus[this._connectionStatus.value()]}`),this._disconnectTransport()):this._logger.logNormal("Disconnecting without socket - probably within preparing, it should be already scheduled for aborting"):this._logger.logNormal("Attempt to close connection but it is closed already")}_onErrorCallback(){this._logger.logInfo("Connection is closed by error"),this._tryReconnect()}_onCloseCallback(e){this._logger.logInfo(`Connection is closed - code=${e.code} msg=${e.reason}`),this._closeHandler?.(e),this._tryReconnect()}_tryReconnectImpl(){return null!==this._maxReconnectCount&&this._reconnectCount===this._maxReconnectCount?(this._logger.logWarn("Maximum attempts to reconnect to websocket reached"),void this._maxReconnectReachedEventDelegate.fire()):(this._reconnectCount+=1,this._logger.logInfo(`Reconnecting count: ${this._reconnectCount}`),navigator.onLine?(this._logger.logInfo("Network status: online - trying to connect"),void this.connect()):(this._logger.logInfo("Network status: offline - wait until online"),void(this._onlineCancellationToken=(0,i.callWhenOnline)((()=>{this._logger.logInfo("Network status changed to online - trying to connect"),this.connect()})))))}_onOpenCallback(){this._logger.logNormal("Connection opened"),this._reconnectCount>0&&this._successReconnectReachedEventDelegate.fire(),this._reconnectCount=0,
this._connectionStatus.setValue(n.ConnectionStatus.Open)}_onMessageCallback(e){this._messageHandler(e.data)}_getReconnectTimeout(){return this._reconnectCount<5?300:5e3}_setOnOfflineListener(){window.addEventListener("offline",this._onOfflineHandler)}_removeOnOfflineListener(){window.removeEventListener("offline",this._onOfflineHandler)}async _connectImpl(){if(this._connectionStatus.value()!==n.ConnectionStatus.Closed)return void this._logger.logNormal("Attempt to open connection but it is not closed");this._socket&&(this._logger.logError("Something went wrong - code 0x2"),this.disconnect()),this._onlineCancellationToken&&(this._onlineCancellationToken(),this._onlineCancellationToken=null),this._logger.logNormal(`Connecting to ${this._url}`),this._shouldReconnect=!0,this._connectAbortController=new AbortController;const e=this._connectAbortController.signal;try{if(this._connectionStatus.setValue(n.ConnectionStatus.Connecting),await this._prepareParamsForConnection(e),e.aborted)throw(0,r.createAbortError)();this._socket=this._createNativeTransport(this._url),this._setOnOfflineListener()}catch(e){this._connectionStatus.setValue(n.ConnectionStatus.Closed),(0,r.skipAbortError)(e)}finally{this._connectAbortController=null}}}},754085:(e,t,s)=>{s.d(t,{LastChanceType:()=>a,OFFERS:()=>n,OfferKind:()=>i});const n={trial:"trial",early_access:"early_access",black_friday:"black_friday",cyber_monday:"cyber_monday",custom_discount:"custom_discount",longer_cycle:"longer_cycle",upgrade:"upgrade",extend:"extend",last_chance:"last_chance",one_usd:"one_usd",three_months:"three_months",unsubscribe:"unsubscribe",six_months:"six_months",coupon:"coupon"},i={early_access:"early_access",black_friday:"black_friday",last_chance:"last_chance",one_usd:"1 usd offer",three_months:"3 months offer",six_months:"six_months",unsubscribe:"unsubscribe",custom_discount:"custom_discount"};var a;!function(e){e.TwoWeeks="LastChance_2w",e.TwoDays="LastChance_2d",e.Hours="LastChance_24h"}(a||(a={}))},802588:(e,t,s)=>{s.d(t,{isShowPromoVideo:()=>u,isSignModalOpen:()=>l,showSignModal:()=>c});var n=s(586240),i=s(901896),a=s(490778);const o=n["media-mf-tablet-landscape"],r=n["media-mf-tablet-vertical"];let h=()=>!1;async function c(e){const t=Object.assign({},e,{isShowVideo:u()});if(window.TVD&&window.TVD.signIn)return window.TVD.signIn(t);{!function(){const e=window.matchMedia(n["media-mf-tablet-landscape"]).matches?a:i,t=document.createElement("link");t.rel="preload",t.as="image",t.href=e,document.head.appendChild(t)}();const e=await Promise.all([s.e(8147),s.e(75816),s.e(93703),s.e(46445),s.e(62093),s.e(44524),s.e(21356),s.e(62564),s.e(46489),s.e(99325),s.e(53799),s.e(25480),s.e(29800),s.e(23141),s.e(29296),s.e(95083),s.e(64797),s.e(3062),s.e(22602),s.e(91248),s.e(60048),s.e(24177),s.e(82321),s.e(12831),s.e(14928),s.e(62526),s.e(86009),s.e(36123)]).then(s.bind(s,588541));return h=e.isSignModalOpen,e.showSignModal(t)}}function l(){return h()}function u(){const e=window.matchMedia(o).matches,t=window.matchMedia(r).matches,s=window.innerWidth,n=window.innerHeight
;return!!e||!!t&&!(!e&&n<s)}},878:(e,t,s)=>{function n(e){let t=e;const s=()=>{window.removeEventListener("online",s),t&&t()};return window.addEventListener("online",s),()=>{t=null}}s.d(t,{callWhenOnline:()=>n})},955273:(e,t,s)=>{function n(){let e,t;return{promise:new Promise(((s,n)=>{e=s,t=n})),reject:t,resolve:e}}s.d(t,{createDeferredPromise:()=>n})},454763:(e,t,s)=>{s.d(t,{Worker:()=>n});class n extends Worker{constructor(e,t){super(function(e){const t=new URL(e),n=new Blob(["self.WEBPACK_PUBLIC_PATH=",JSON.stringify(new URL(s.p,location.href).href),";\n","self.locale=",JSON.stringify(s.g.locale),";\n",window.language?`self.language=${JSON.stringify(window.language)};\n`:"","importScripts(",JSON.stringify(t.href),");"],{type:"application/javascript"});return URL.createObjectURL(n)}(e),t)}}}}]);